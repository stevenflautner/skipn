package kotlinx.html

import kotlinx.html.*
import kotlinx.html.impl.*
import kotlinx.html.attributes.*

/*******************************************************************************
    DO NOT EDIT
    This file was generated by module generate
*******************************************************************************/

@Suppress("unused")
open class RP(initialAttributes : Map<String, String>, override var consumer : TagConsumer<*>) : HTMLTag("rp", consumer, initialAttributes, null, true, false), HtmlInlineTag {

}

@Suppress("unused")
open class RT(initialAttributes : Map<String, String>, override var consumer : TagConsumer<*>) : HTMLTag("rt", consumer, initialAttributes, null, true, false), HtmlInlineTag {

}

@Suppress("unused")
open class RUBY(initialAttributes : Map<String, String>, override var consumer : TagConsumer<*>) : HTMLTag("ruby", consumer, initialAttributes, null, true, false), HtmlBlockInlineTag {

}
/**
 * Ruby annotation text
 */
@HtmlTagMarker
inline fun RUBY.rt(classes : String? = null, crossinline block : RT.() -> Unit = {}) : Unit = RT(attributesMapOf("class", classes), consumer).visit(block)

/**
 * Parenthesis for ruby annotation text
 */
@HtmlTagMarker
inline fun RUBY.rp(classes : String? = null, crossinline block : RP.() -> Unit = {}) : Unit = RP(attributesMapOf("class", classes), consumer).visit(block)

val RUBY.asFlowContent : FlowContent
    get()  = this

val RUBY.asPhrasingContent : PhrasingContent
    get()  = this


